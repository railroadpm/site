// Note: We depend on the "Easy Sass" VSCode extension as our *build tool* to automatically compile this file to CSS on save
#nc-root header {
  >div {
    background-color: #0072a9;

    a,
    button,
    svg {
      color: #dedede;
    }

    a:hover,
    a.header-link-active,
    button:hover {
      color: white;

      svg {
        color: white;
      }
    }
  }

  nav~div {
    svg {
      color: #0072a9;
    }

    svg:hover {
      color: white;
    }
  }
}

.nc-app-header-btn-media {
  display: none !important;
}

// RBAC at the UI level - "informal" RBAC since hiding DOM elements can be easily defeated
$role-list: admin bnsf cn kcs ns up aor;

#nc-root {

  // Start by hiding everything RBAC-related...
  .nc-app-ui-rbac {
    display: none;
  }

  .nc-app-sidebar-search {
    display: none;
  }

  // And then show things that should be visible to different roles...
  &.nc-user-role-is-admin {
    .nc-app-header-btn-wf {
      display: inline-flex;
    }

    .nc-app-editor-publishing {
      display: block;
    }

    .nc-app-editor-btn-delete {
      display: inline-flex;
    }
  }

  @each $role in $role-list {
    &.nc-user-role-is-#{$role} {

      .nc-app-collection-container,
      .nc-app-collection-entries {
        display: block;
      }

      .nc-app-header-quick-add {
        display: block;
      }
    }

    @if $role !=admin {

      &.nc-user-role-is-admin,
      &.nc-user-role-is-#{$role} {

        .nc-app-sidebar-nav-link-reports_#{$role},
        .nc-app-header-quick-add-link-reports_#{$role} {
          display: flex;
        }
      }
    }
  }
}
